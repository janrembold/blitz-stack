{
  "Resources": {
    "MyAppVpc4A7F91FE": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/Resource"
      }
    },
    "MyAppVpcPublicSubnet1Subnet66F0954F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/Subnet"
      }
    },
    "MyAppVpcPublicSubnet1RouteTable1FE4E5C5": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/RouteTable"
      }
    },
    "MyAppVpcPublicSubnet1RouteTableAssociation7B706CE8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPublicSubnet1RouteTable1FE4E5C5"
        },
        "SubnetId": {
          "Ref": "MyAppVpcPublicSubnet1Subnet66F0954F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MyAppVpcPublicSubnet1DefaultRoute4C879FD1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPublicSubnet1RouteTable1FE4E5C5"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyAppVpcIGW87384845"
        }
      },
      "DependsOn": [
        "MyAppVpcVPCGW07851A58"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MyAppVpcPublicSubnet1EIPC0FAC117": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/EIP"
      }
    },
    "MyAppVpcPublicSubnet1NATGatewayE2C00866": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "MyAppVpcPublicSubnet1Subnet66F0954F"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "MyAppVpcPublicSubnet1EIPC0FAC117",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet1/NATGateway"
      }
    },
    "MyAppVpcPublicSubnet2Subnet5A9A3608": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/Subnet"
      }
    },
    "MyAppVpcPublicSubnet2RouteTable9CDD668A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/RouteTable"
      }
    },
    "MyAppVpcPublicSubnet2RouteTableAssociationF9784E74": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPublicSubnet2RouteTable9CDD668A"
        },
        "SubnetId": {
          "Ref": "MyAppVpcPublicSubnet2Subnet5A9A3608"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MyAppVpcPublicSubnet2DefaultRoute9388166F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPublicSubnet2RouteTable9CDD668A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyAppVpcIGW87384845"
        }
      },
      "DependsOn": [
        "MyAppVpcVPCGW07851A58"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MyAppVpcPublicSubnet2EIP11A563B7": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/EIP"
      }
    },
    "MyAppVpcPublicSubnet2NATGateway28555C67": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "MyAppVpcPublicSubnet2Subnet5A9A3608"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "MyAppVpcPublicSubnet2EIP11A563B7",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PublicSubnet2/NATGateway"
      }
    },
    "MyAppVpcPrivateSubnet1SubnetEAFCFB9E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet1/Subnet"
      }
    },
    "MyAppVpcPrivateSubnet1RouteTable56C1AB10": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet1/RouteTable"
      }
    },
    "MyAppVpcPrivateSubnet1RouteTableAssociation24CBE7B2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPrivateSubnet1RouteTable56C1AB10"
        },
        "SubnetId": {
          "Ref": "MyAppVpcPrivateSubnet1SubnetEAFCFB9E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "MyAppVpcPrivateSubnet1DefaultRouteDA307DA7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPrivateSubnet1RouteTable56C1AB10"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyAppVpcPublicSubnet1NATGatewayE2C00866"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "MyAppVpcPrivateSubnet2Subnet3DD2D8E6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet2/Subnet"
      }
    },
    "MyAppVpcPrivateSubnet2RouteTableBB08FB9B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet2/RouteTable"
      }
    },
    "MyAppVpcPrivateSubnet2RouteTableAssociationB1200E26": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPrivateSubnet2RouteTableBB08FB9B"
        },
        "SubnetId": {
          "Ref": "MyAppVpcPrivateSubnet2Subnet3DD2D8E6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "MyAppVpcPrivateSubnet2DefaultRoute14A726E7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyAppVpcPrivateSubnet2RouteTableBB08FB9B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyAppVpcPublicSubnet2NATGateway28555C67"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "MyAppVpcIGW87384845": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AwsStack/MyAppVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/IGW"
      }
    },
    "MyAppVpcVPCGW07851A58": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        },
        "InternetGatewayId": {
          "Ref": "MyAppVpcIGW87384845"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVpc/VPCGW"
      }
    },
    "MyAppApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": "MyApp"
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppApplication"
      }
    },
    "MyAppVersion": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "ApplicationName": "MyApp",
        "SourceBundle": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "6a9a0507c3e2bfac9749f257bdd3d9f313c01ee3984ad7bf373597c341863d6f.zip"
        }
      },
      "DependsOn": [
        "MyAppApplication"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppVersion"
      }
    },
    "MyAppEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": "MyApp",
        "EnvironmentName": "MySampleEnvironment",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": "t3.small"
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": "aws-elasticbeanstalk-ec2-role"
          },
          {
            "Namespace": "aws:elasticbeanstalk:container:nodejs",
            "OptionName": "NodeVersion",
            "Value": "16.13.2"
          }
        ],
        "SolutionStackName": "64bit Amazon Linux 2018.03 v4.11.0 running Node.js",
        "VersionLabel": {
          "Ref": "MyAppVersion"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/MyAppEnvironment"
      }
    },
    "AwsStacksubnetgroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "List of subnets used for redis cache AwsStack",
        "SubnetIds": [
          {
            "Ref": "MyAppVpcPrivateSubnet1SubnetEAFCFB9E"
          },
          {
            "Ref": "MyAppVpcPrivateSubnet2Subnet3DD2D8E6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/AwsStack-subnet-group"
      }
    },
    "AwsStacksecuritygroup2FC3B89A": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "AwsStack/AwsStack-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "MyAppVpc4A7F91FE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/AwsStack-security-group/Resource"
      }
    },
    "AwsStackcluster": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "CacheNodeType": "cache.t2.micro",
        "Engine": "redis",
        "NumCacheNodes": 1,
        "AutoMinorVersionUpgrade": true,
        "CacheSubnetGroupName": {
          "Ref": "AwsStacksubnetgroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AwsStacksecuritygroup2FC3B89A",
              "GroupId"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/AwsStack-cluster"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02RwW7CMAyGn4V7yEaRdi8VQlymqp24ojR4zLQkVeyAUNV3X1Joy8n27+TPZyeRq7X8XKg7LfWpXjZYya5kpWsRpGMHOpHdodUi+zWHPBO5rxrUpa8McNTmrLCe4UdVDcz6rKVEVqNitGY6HJPtPo/hW/FOMdzVQ+QObyGdjfeGwYV8PPAkeVUpB9a/KxgWJWjvkB87Z307MLwLvaD1UREBk0xjCLXceF0DbxSBgEYRo65AGWLV1LILDmnbhmkn6rfyAI5e6tbc0FkTGfrRJjDB4PAcY0LKYiNrPIWR+l4UQNY7DWIgCms/ozkP+xkb8Y41J4xv9sLYE8gLfdxWX/HbksWFEJfOG8YryOIZ/wF20KGx0gEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "AwsStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}